class Solution {
    public List<String> generateParenthesis(int n) {
        
        List<String> res = new ArrayList<>();

        backtrack(n,"",0,0,res);

        return res;


    }


    public void backtrack(int n, String s , int open , int close,List<String> res ){

        if(open == close && open +close == n*2){

            res.add(s);
            return;

        }

        if(open < n){
            backtrack(n,s+'(',open+1,close,res);
        }
        if(close<open){
            backtrack(n,s+')',open,close+1,res);
        }
    }
}
